
#include<bits/stdc++.h>
using namespace std;
#define ll   long long
#define pb   push_back
#define yes   cout<<"YES"<<endl
#define no   cout<<"NO"<<endl
#define all(x) (x).begin(), (x).end()
#define    gcd(a,b)      __gcd(a,b)
#define    lcm(a,b)  (a*b)/__gcd(a,b)
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

// bfs is used  for finding sortest path in unwated graph (single sourse)
const ll mx=1e4+123; 
vector<ll>adj[mx];
ll lvl[mx];


void bfs( ll s){

    memset(lvl, -1, sizeof(lvl));

    lvl[s]=0; 
    queue<ll>q; 
    q.push(s);
    while(!q.empty())
    {
        ll u=q.front();
        q.pop();

        for(auto v: adj[u])
        {
            if(lvl[v]==-1)
            {
                lvl[v]=lvl[u]+1; 
                q.push(v);

            }
        }
    }
    
}

int main()
{
    optimize();
    ll t; 
    cin>>t; 
    while(t--)
    {
        for(ll i=0; i<mx; i++)adj[i].clear();
        ll n,m; 
        cin>>n>>m; 
        for(ll i=0; i<m; i++)
        {
            ll u, v; 
            cin>>u>>v; 
            adj[u].pb(v);
            adj[v].pb(u);

        }
        bfs(1);
        cout<<lvl[n]<<endl;
    }
}
/*****************  ALHAMDULILLAH  *****************/
