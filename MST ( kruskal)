#include<bits/stdc++.h>
using namespace std; 
typedef long long ll; 
const ll N=1e5+123; 
ll parents[N],sz[N];
void make(ll v)
{
    parents[v]=v; 
    sz[v]=1;
}
ll find(ll v)
{
    if(parents[v]==v)return parents[v];
    return parents[v]=find(parents[v]);
}
void Union( ll a, ll b )
{
    a=find(a);
    b=find(b);
    if(a!=b){
        if(sz[a]<sz[b])swap(a,b);
        parents[b]=a; 
        sz[a]+=sz[b];
    }
}

int main()
{
    ll n,m; 
    cin>>n>>m; 
    vector<pair<ll,pair<ll,ll>>>edges;
    for(ll i=0; i<m; i++)
    {
        ll u,v,w; 
        cin>>u>>v>>w; 
        edges.push_back({w,{u,v}});

    }
    sort(edges.begin(),edges.end());
    for(ll i=1; i<=n; i++)make(i);
    ll cost=0; 
    for(auto k:edges)
    {
        ll w=k.first; 
        ll u=k.second.first; 
        ll v=k.second.second; 
        if(find(u)==find(v))continue; 
        Union(u,v);
        cost+=w; 
        cout<<u<<" "<<v<<endl;

    }
    cout<<cost<<endl;
}
